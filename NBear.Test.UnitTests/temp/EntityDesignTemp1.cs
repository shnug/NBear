using System;
using NBear.Common.Design;

namespace NBear.Test.UnitTests.temp.EntityDesignTemp1
{
    //goal:
    //to design an entity generating way, which is benefited from code generated by VS class designer.

    [MappingName("UserTable")]
    public interface TestUser : Entity
    {
        [PrimaryKey, SqlType("int")]
        int ID
        {
            get;
        }

        [CompoundUnit, MappingName("UserName"), SqlType("nvarchar(50)")]
        UserName? Name
        {
            get;
            set;
        }

        UserType Type
        {
            get;
            set;
        }

        [CustomQuery("{TypeID} = @Type", OrderBy="{TypeID} DESC", LazyLoad=true)]
        TypeDescription TypeDesc
        {
            get;
            set;
        }

        [CustomQuery("{UserID} = @UserID")]
        Address[] Addrs
        {
            get;
            set;
        }
    }

    public interface AdminUser : TestUser
    {
        string Password { get; set; }
    }

    [Serializable]
    public struct UserName
    {
        public string FirstName;
        public string LastName;
    }

    public enum UserType
    {
        Guest,
        NormalUser,
        Administrator,
    }

    public interface TypeDescription : Entity
    {
        int TypeID { get; set; }
        string Desc { get; set; }
    }

    public interface Group
    {
        int ID
        {
            get;
            set;
        }

        TestUser[] Users
        {
            get;
            set;
        }
    }

    public interface Address : Entity
    {
        [PrimaryKey]
        int ID { get; set; }
        int UserID { get; set; }
        string Name { get; set; }
        string Content { get; set; }
    }

    public interface TempTable : Entity
    {
        [PrimaryKey]
        decimal ID { get; }
        string ColName { get; set; }
        Guid Guid { get; set; }
    }

    public interface Message : Entity
    {
        [PrimaryKey]
        int ID { get; }
        [SqlType("ntext")]
        string AdminFeedback { get; set; }
        DateTime? AdminFeedbackTime { get; set; }
        [SqlType("ntext")]
        string Content { get; set; }
        string Email { get; set; }
        bool IsPrivate { get; set; }
        string Nick { get; set; }
        DateTime PostTime { get; set; }
    }
}